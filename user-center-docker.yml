server:
  port: 8099

  
author: zj@aek56.com

eureka:
  client:
    serviceUrl:
      defaultZone: http://register-center:8778/eureka/

# The OAuth2 server definition that would be used to send the authorization requests to
authserver:
    hostname: authserver
    port: 18899
    contextPath: userauth

# Note that the "/user" endpoint needs to provide the principle of the logged in user (/me endpoint)
security:
  oauth2:
    sso:
      home:
        secure: false
        path: /,/**/*.html
    client:
      accessTokenUri: http://${authserver.hostname}:${authserver.port}/${authserver.contextPath}/oauth/token
      userAuthorizationUri: http://${authserver.hostname}:${authserver.port}/${authserver.contextPath}/oauth/authorize
      clientId: aek56.com
      clientSecret: secret
# The userInfoUri is used to authenticate the user so that SSO token can be relayed forward. It needs to either be
# a physical endpoint (defined using userInfoUri) OR can be bypassed if you use a JSON web token (JWT) that stores
# information about grants and authentication in the token itself.

# Note that the "/user" endpoint needs to provide the principle of the logged in user (/me endpoint)
    resource: 
      userInfoUri: http://${authserver.hostname}:${authserver.port}/${authserver.contextPath}/me
      preferTokenInfo: false
