# Auth-server instance when used on Docker

#refreshtest: '{cipher}2803a18f5c9d4276b1002fa1fc74c5cd7b228842de13308bcc102fc7d7c6e5d4'

env:
  develop: dev.aek.com
  test: ebey.aek.com
  
  
spring:
  profiles: dev
#  cloud:
#    client:
#      hostname: API-Getway
#      ipAddress: ${env.develop}   
# The OAuth2 server definition that would be used to send the authorization requests to

# Define the port where the API gateway server would be running
server:
  port: 8081
  
zuul:
  routes:
    diaowen:
      path: /diaowen/**
      stripPrefix: false
      url: http://localhost:8080   

  
zuul:
  ribbon-isolation-strategy: THREAD  
  prefix: /api
  routes:      
#    ignoredServices: '*'
    assets:
      path: /assets/**
      stripPrefix: false
      serviceId: assets-web-api
    auth:
      path: /oauth/**
      serviceId: auth-server
    sys-web:
      path: /sys/**
      stripPrefix: false
      serviceId: sys-web-api
    repair:
      path: /repair/**
      stripPrefix: false
      serviceId: repair-web-api
    fileserver:
      path: /upload/**
      stripPrefix: false
      serviceId: aek-fileserver-api
    browserfile:
      path: /file/**
      serviceId: aek-fileserver-api 
    servlet-path: /zuul      
  max:
    host:
      connections: 500
  host:
    socket-timeout-millis: 180000
    connect-timeout-millis: 60000  
  sensitiveHeaders: 

hystrix:
  command:
    default:
      execution:
        timeout:
          enabled: true
        isolation:
          thread:
            timeoutInMilliseconds: 180000     

ribbon:
  ReadTimeout: 180000
  ConnectTimeout: 60000
  MaxAutoRetries: 2
  MaxAutoRetriesNextServer: 1
  eureka:
    enabled: true      
management:
 add-application-context-header: false
 security:
  enabled: false
  
# Define the Eureka server that handles service registration
eureka: 
  instance:
    status-page-url-path: /swagger-ui.html
    preferIpAddress: true
    ip-address: ${spring.cloud.client.ipAddress}
    instance-id: ${spring.cloud.client.hostname}:${server.port}   
    metadataMap:
      zone: dev
  client: 
    preferSameZoneEureka: true
    serviceUrl: 
      defaultZone: http://register-center:19512/eureka/,http://register-center:19511/eureka/     

security:
  oauth2:
    sso:
      home:
        secure: false
        path: /,/**/*.html,/hello,/refresh
    client:
      accessTokenUri: http://${authserver.hostname}:${authserver.port}${authserver.contextPath}/oauth/token
      userAuthorizationUri: http://${authserver.hostname}:${authserver.port}${authserver.contextPath}/oauth/authorize
      clientId: aek56.com
      clientSecret: secret
    resource:
      jwt: 
        keyValue: aek56.com

logging: 
  file: logs/saas-ui.log
  pattern:
    file: "%date{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %level [%c{36}.%M:%L] - %msg%xEx%n"
    console: "%date{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %level [%c{36}.%M:%L] - %msg%xEx%n"
  level:
     root: INFO
     com.aek56: debug
     com.netflix: ERROR
     org:
       springframework:
         security: DEBUG


        
